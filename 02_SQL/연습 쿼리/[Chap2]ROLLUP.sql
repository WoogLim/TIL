SELECT TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM
       , T1.CUS_ID
       , SUM(T1.ORD_AMT) ORD_AMT
  FROM T_ORD T1
 WHERE T1.CUS_ID IN ('CUS_0001','CUS_0002')
   AND T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
   AND T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
   GROUP BY TO_CHAR(T1.ORD_DT,'YYYYMM'), T1.CUS_ID;
   
SELECT TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM
       , T1.CUS_ID
       , SUM(T1.ORD_AMT) ORD_AMT
  FROM T_ORD T1
 WHERE T1.CUS_ID IN ('CUS_0001','CUS_0002')
   AND T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
   AND T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
 GROUP BY
 ROLLUP(TO_CHAR(T1.ORD_DT,'YYYYMM'), T1.CUS_ID);
 
SELECT T1.ORD_ST, TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM, T1.CUS_ID
       , SUM(T1.ORD_AMT) ORD_AMT
  FROM T_ORD T1
 WHERE T1.CUS_ID IN ('CUS_0001', 'CUS_0002')
   AND T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
   AND T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
 GROUP BY ROLLUP(T1.ORD_ST, TO_CHAR(T1.ORD_DT,'YYYYMM'), T1.CUS_ID)
 ORDER BY T1.ORD_ST, TO_CHAR(T1.ORD_DT,'YYYYMM'), T1.CUS_ID;
 
SELECT T1.ORD_ST, TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM, T1.CUS_ID
       , SUM(T1.ORD_AMT) ORD_AMT
  FROM T_ORD T1
 WHERE T1.CUS_ID IN ('CUS_0001', 'CUS_0002')
   AND T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
   AND T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
 GROUP BY ROLLUP(TO_CHAR(T1.ORD_DT,'YYYYMM'), T1.ORD_ST, T1.CUS_ID)
 ORDER BY T1.ORD_ST, TO_CHAR(T1.ORD_DT,'YYYYMM'), T1.CUS_ID;
 
SELECT T1.ORD_ST, T1.PAY_TP, COUNT(8) ORD_CNT
  FROM T_ORD T1
 GROUP BY ROLLUP(T1.ORD_ST, T1.PAY_TP);
 
--- NULL이 존재하는 컬럼인 PAY_TP에 대해 ROLLUP을 수행 - GROUPING함수 사용
SELECT T1.ORD_ST, GROUPING(T1.ORD_ST) GR_ORD_ST
       , T1.PAY_TP, GROUPING(T1.PAY_TP) GR_PAY_TP
       , COUNT(*) ORD_CNT
  FROM T_ORD T1
 GROUP BY ROLLUP(T1.ORD_ST, T1.PAY_TP);
 
-- ROLLUP되는 컬럼을 TOTAL로 표시
SELECT CASE WHEN GROUPING(T1.ORD_ST) = 1 THEN 'TOTAL' ELSE T1.ORD_ST END ORD_ST,
       CASE WHEN GROUPING(T1.PAY_TP) = 1 THEN 'TOTAL' ELSE T1.PAY_TP END PAY_TP,
       COUNT(*) ORD_CNT
  FROM T_ORD T1
 GROUP BY ROLLUP(T1.ORD_ST, T1.PAY_TP)
 ORDER BY T1.ORD_ST, T1.PAY_TP;
 
--- 주문년월, 지역ID, 고객등급별 주문금액 - ROLLUP
SELECT CASE WHEN GROUPING(TO_CHAR(T2.ORD_DT, 'YYYYMM'))=1 THEN 'TOTAL'
            ELSE TO_CHAR(T2.ORD_DT,'YYYYMM') END ORD_YM,
       CASE WHEN GROUPING(T1.RGN_ID) = 1 THEN 'TOTAL' ELSE T1.RGN_ID END RGN_ID,
       CASE WHEN GROUPING(T1.CUS_GD) = 1 THEN 'TOTAL' ELSE T1.CUS_GD END CUS_GD,
       SUM(T2.ORD_AMT) ORD_AMT
  FROM M_CUS T1,
       T_ORD T2
 WHERE T1.CUS_ID = T2.CUS_ID
   AND T2.ORD_DT >= TO_DATE('20170201','YYYYMMDD')
   AND T2.ORD_DT < TO_DATE('20170401','YYYYMMDD')
   AND T1.RGN_ID IN ('A','B')
   GROUP BY ROLLUP(TO_CHAR(T2.ORD_DT,'YYYYMM'), T1.RGN_ID, T1.CUS_GD)
   ORDER BY TO_CHAR(T2.ORD_DT,'YYYYMM'), T1.RGN_ID, T1.CUS_GD;
   
-- 주문년월, 지역ID, 고객등급별 주문금액 - 전체 합계만 구하기
SELECT CASE WHEN GROUPING(TO_CHAR(T2.ORD_DT, 'YYYYMM'))=1 THEN 'TOTAL'
            ELSE TO_CHAR(T2.ORD_DT,'YYYYMM') END ORD_YM,
       CASE WHEN GROUPING(T1.RGN_ID) = 1 THEN 'TOTAL' ELSE T1.RGN_ID END RGN_ID,
       CASE WHEN GROUPING(T1.CUS_GD) = 1 THEN 'TOTAL' ELSE T1.CUS_GD END CUS_GD,
       SUM(T2.ORD_AMT) ORD_AMT
  FROM M_CUS T1,
       T_ORD T2
 WHERE T1.CUS_ID = T2.CUS_ID
   AND T2.ORD_DT >= TO_DATE('20170201','YYYYMMDD')
   AND T2.ORD_DT < TO_DATE('20170401','YYYYMMDD')
   AND T1.RGN_ID IN ('A','B')
 GROUP BY ROLLUP((TO_CHAR(T2.ORD_DT,'YYYYMM'), T1.RGN_ID, T1.CUS_GD))
 ORDER BY TO_CHAR(T2.ORD_DT,'YYYYMM'), T1.RGN_ID, T1.CUS_GD;
 
-- ROLLUP을 대신하는 방법
-- ROLLUP으로 소계를 구하는 SQL
SELECT TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM, T1.CUS_ID,
       SUM(T1.ORD_AMT) ORD_AMT
  FROM T_ORD T1
 WHERE T1.CUS_ID IN('CUS_0001','CUS_0002')
   AND T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
   AND T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
 GROUP BY ROLLUP(TO_CHAR(T1.ORD_DT,'YYYYMM'), T1.CUS_ID);
 
-- UNION ALL로 대신하기
SELECT TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM, T1.CUS_ID,
       SUM(T1.ORD_AMT) ORD_AMT
  FROM T_ORD T1
 WHERE T1.CUS_ID IN ('CUS_0001','CUS_0002')
   AND T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
   AND T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
 GROUP BY TO_CHAR(T1.ORD_DT,'YYYYMM'), T1.CUS_ID
UNION ALL
SELECT TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM, 'TOTAL' CUS_ID,
       SUM(T1.ORD_AMT) ORD_AMT
  FROM T_ORD T1
 WHERE T1.CUS_ID IN ('CUS_0001','CUS_0002')
   AND T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
   AND T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
 GROUP BY TO_CHAR(T1.ORD_DT,'YYYYMM')
UNION ALL
SELECT 'TOTAL' ORD_YM, 'TOTAL' CUS_ID,
       SUM(T1.ORD_AMT) ORD_AMT
  FROM T_ORD T1
 WHERE T1.CUS_ID IN('CUS_0001','CUS_0002')
   AND T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
   AND T1.ORD_DT < TO_DATE('20170501','YYYYMMDD');
   
-- 카테시안-조인으로 대신하기
SELECT CASE WHEN T2.RNO = 1 THEN TO_CHAR(T1.ORD_DT,'YYYYMM')
            WHEN T2.RNO = 2 THEN TO_CHAR(T1.ORD_DT,'YYYYMM')
            WHEN T2.RNO = 3 THEN 'TOTAL' END ORD_YM,
       CASE WHEN T2.RNO = 1 THEN T1.CUS_ID
            WHEN T2.RNO = 2 THEN 'TOTAL'
            WHEN T2.RNO = 3 THEN 'TOTAL' END CUS_ID,
       SUM(T1.ORD_AMT) ORD_AMT
  FROM T_ORD T1
       ,(
            SELECT ROWNUM RNO FROM DUAL CONNECT BY ROWNUM <= 3
       ) T2
 WHERE T1.CUS_ID IN ('CUS_0001','CUS_0002')
   AND T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
   AND T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
 GROUP BY CASE WHEN T2.RNO = 1 THEN TO_CHAR(T1.ORD_DT,'YYYYMM')
               WHEN T2.RNO = 2 THEN TO_CHAR(T1.ORD_DT,'YYYYMM')
               WHEN T2.RNO = 3 THEN 'TOTAL' END,
          CASE WHEN T2.RNO = 1 THEN T1.CUS_ID
               WHEN T2.RNO = 2 THEN 'TOTAL'
               WHEN T2.RNO = 3 THEN 'TOTAL' END;
            
-- ROLLUP을 WITH절과 UNION ALL로 대체
WITH T_RES AS(
    SELECT TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM, T1.CUS_ID,
           SUM(T1.ORD_AMT) ORD_AMT
      FROM T_ORD T1
     WHERE T1.CUS_ID IN ('CUS_0001','CUS_0002')
       AND T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
       AND T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
     GROUP BY TO_CHAR(T1.ORD_DT,'YYYYMM'), T1.CUS_ID
     )
SELECT T1.ORD_YM, T1.CUS_ID, T1.ORD_AMT
  FROM T_RES T1
UNION ALL
SELECT T1.ORD_YM, 'TOTAL', SUM(T1.ORD_AMT)
  FROM T_RES T1
 GROUP BY T1.ORD_YM
UNION ALL
SELECT 'TOTAL', 'TOTAL', SUM(T1.ORD_AMT)
  FROM T_RES T1;
  
-- CUBE
-- 주문상태(ORD_ST), 주문년월, 고객ID별 주문금액, - CUBE로 가능한 모든 소계를 추가
SELECT CASE WHEN GROUPING(T1.ORD_ST) = 1 THEN 'TOTAL' ELSE T1.ORD_ST END ORD_ST,
       CASE WHEN GROUPING(TO_CHAR(T1.ORD_DT,'YYYYMM')) = 1 THEN 'TOTAL' ELSE TO_CHAR(T1.ORD_DT,'YYYYMM') END ORD_YM,
       CASE WHEN GROUPING(T1.CUS_ID) = 1 THEN 'TOTAL' ELSE T1.CUS_ID END CUS_ID,
       SUM(T1.ORD_AMT) ORD_AMT
  FROM T_ORD T1
 WHERE T1.CUS_ID IN('CUS_0001','CUS_0002')
   AND T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
   AND T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
 GROUP BY CUBE(T1.ORD_ST, TO_CHAR(T1.ORD_DT,'YYYYMM'), T1.CUS_ID)
 ORDER BY T1.ORD_ST, TO_CHAR(T1.ORD_DT,'YYYYMM'), T1.CUS_ID;
 
-- GROUPING SETS
SELECT TO_CHAR(T1.ORD_DT,'YYYYMM') ORD_YM,
       T1.CUS_ID,
       COUNT(*) ORD_CNT,
       SUM(T1.ORD_AMT) ORD_AMT
  FROM T_ORD T1
 WHERE T1.ORD_DT >= TO_DATE('20170301','YYYYMMDD')
   AND T1.ORD_DT < TO_DATE('20170501','YYYYMMDD')
   AND T1.CUS_ID IN ('CUS_0061','CUS_0062')
 GROUP BY GROUPING SETS(
                    (TO_CHAR(T1.ORD_DT,'YYYYMM'),T1.CUS_ID) -- GROUP BY 기본 데이터
                    ,(TO_CHAR(T1.ORD_DT,'YYYYMM')) -- 주문년월별 소계
                    ,(T1.CUS_ID) -- 고객ID별 소계
                    ,() -- 전체합계
                    );

-- JOIN 